@using PagedList.Mvc;
@using PagedList;
@model IPagedList<BookWebsite.Models.Chapter>

@{
    ViewBag.Title = "Chapters";
}
@section Styles
{
    <link href="~/Content/Chapters.css" rel="stylesheet" type="text/css" />
    }

<h2>Chapters</h2>
@using (Html.BeginForm("Index", "Chapters", FormMethod.Get, new { @class = "form-inline" }))
{
    <label>Choose the book: </label>
    <div class="form-group" style="display: flex;">
        @Html.DropDownList("title", (SelectList)ViewBag.books, "Select a book", new { @class = "form-control" })
        <button type="submit" class="btn btn-primary">Filter</button>
    </div>
}
<p>
    @Html.ActionLink("Sort by Chapter Number Ascending", "Index", new { title = ViewBag.SelectedBooks, sortOrder = "" }) |
    @Html.ActionLink("Sort by Chapter Number Descending", "Index", new { title = ViewBag.SelectedBooks, sortOrder = "chapter_num_desc" })
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Book)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().ChapterNumber)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.FirstOrDefault().Title)
        </th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Book.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ChapterNumber)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.ChapterId }) |
                @Html.ActionLink("Details", "Details", new { id = item.ChapterId }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.ChapterId })
            </td>
        </tr>
    }

</table>
<div>
    @Html.PagedListPager(
            Model,
            page => Url.Action("Index", new { title = ViewBag.SelectedBooks, sortOrder = ViewBag.ChapterNumberSortParam, page = page }),
            new PagedListRenderOptions { Display = PagedListDisplayMode.IfNeeded }
        )
</div>
